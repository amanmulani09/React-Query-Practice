Here is the step by step guide of my notes while learning react-query

1. => install the package using npm i @tanstack/react-query and devtools by i @tanstack/react-query-devtools

2 => import query client and query-client provider and wrap it 
        on the application create a client instant by calling queryClient constructor and pass it to the provider to client prop;
//here is the boiler plate code

import ReactDOM from 'react-dom/client'
import App from './App.tsx'
import './index.css'
import { QueryClient,QueryClientProvider } from '@tanstack/react-query';

const queryClient = new QueryClient();
ReactDOM.createRoot(document.getElementById('root')!).render(
    <QueryClientProvider client={queryClient}>
    <App />
    </QueryClientProvider>
)

3 => in react query we can do two major things 


1. Query => getting data from somewhere
2. Mutation => changing some typeof data

ex getting list of posts[query],create a brand new post[mutation];

there are two hooks useQuery, useMutation which used to get data and change data 

//example of query 

import {useQuery,useMutation} from '@tanstack/react-query'

const POSTS =[
  {
    id:1,
    title:'post 1'
  },
  {
    id:2,
    title:'post 2'
  }
];

const App = ()=>{
  const postQuery = useQuery({
    queryKey:["posts"],
    queryFn: ()=> wait(1000).then(()=> [...POSTS])
  })

if(postQuery.isLoading) return <h1>...Loading</h1>
if(postQuery.isError) return <pre>{JSON.stringify(postQuery.error)}</pre>

  return(
    <>
    {postQuery.data.map((data)=>{
      return <p>{data.title}</p>
    })}
    </>
  )
}

function wait(duration:number){
return new Promise(resolve => setTimeout(resolve, duration));
}

export default App;

